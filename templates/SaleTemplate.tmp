pragma solidity 0.4.19;

import "@tokenfoundry/sale-contracts/contracts/Sale.sol";


contract <%= SALE_NAME %>Sale is Sale {

    function <%= SALE_NAME %>Sale() 
        Sale(
            <%= TOTAL_SALE_CAP %> ether, // Total sale cap
            <%= MIN_CONTRIBUTION %> ether, // Min contribution
            <%= MIN_THRESHOLD %> ether, // Min threshold
            <%= MAX_TOKENS %> * (10 ** <%= TOKEN_DECIMALS %>), // Max tokens * 10 * Token decimals
            <%= WHITELIST_ADMIN %>, // Whitelist Admin
            <%= WALLET %>, // Wallet
            <%= CLOSING_DURATION %> days, // Closing duration
            <%= VAULT_INITIAL_AMOUNT %> ether, // Vault initial amount
            <%= VAULT_DISBURSEMENT_AMOUNT %> ether, // Vault disbursement amount
            <%= START_TIME %>, // Start time
            "<%= SALE_NAME %>", // Token name
            "<%= TOKEN_SYMBOL %>",  // Token symbol
            <%= TOKEN_DECIMALS %> // Token decimals
        ) 
        public 
    {
        <% if (DISBURSEMENTS.length) { %>
            <% DISBURSEMENTS.forEach((disbursement, i) => { %>
                setupDisbursement(<%= disbursement.address %>, <%= disbursement.amount %> * (10 ** <%= TOKEN_DECIMALS %>), <%= disbursement.duration %>);
            <% }) %>
        <% } %>
    }
}
